<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>show_debug_message("GRIDCACHER - CREATE")

/*
w = (room_width/32)+1
h = (room_height/32)+1

var tw = w
var th = h

global.cacheGrid = ds_grid_create(tw, th)

for (var v = 0; v &lt; ds_grid_height(global.cacheGrid); v++) {
    for (var u = 0; u &lt; ds_grid_width(global.cacheGrid); u++) {
        var newGrid = ds_grid_create(tw, th)
        for (var k = 0; k &lt; ds_grid_height(global.pathGrid); k++) {
            for (var j = 0; j &lt; ds_grid_width(global.pathGrid); j++) {
                ds_grid_set(newGrid, j, k, global.pathMaxCost);
            }
        }
        var newPos = createNode(u, v)
        fillGrid(newGrid, newPos)
        
        if (u == 5 &amp;&amp; v == 5) {
            global.pathDebug = false
            
            for (var i = 0; i &lt; ds_grid_width(newGrid); i++) {
                rowPrint = "[ "
                for (var j = 0; j &lt; ds_grid_height(newGrid); j++) {
                    rowPrint += string(ds_grid_get(newGrid, i, j)) + " "
                }
                rowPrint += " ]"
                show_debug_message(rowPrint)
            }
        }
        
        ds_grid_set(global.cacheGrid, u, v, newGrid)
        // show_debug_message("DONE " + string(u) + " " + string(v))
    }
}
*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
